

# This file was *autogenerated* from the file hsignal.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_0 = Integer(0); _sage_const_0p15000 = RealNumber('0.15000'); _sage_const_200 = Integer(200); _sage_const_400 = Integer(400); _sage_const_10 = Integer(10); _sage_const_1 = Integer(1)
from kerrgeodesic_gw import (KerrBH,h_plus_particle, h_cross_particle, 
                             h_amplitude_particle_fourier, plot_spectrum_particle, 
                             plot_h_particle, h_particle_signal)



def r_isco(a):
    return KerrBH(a).isco_radius()


def ordital_period(a, r0):
    return RDF(_sage_const_2 *pi*(r0**(_sage_const_3 /_sage_const_2 ) + a))


def hpm(phi1,a1,r01):
    k=[]
    l=[]
    phi1 = _sage_const_0 
    a1 = _sage_const_0 
    r01 = _sage_const_0p15000  + r_isco(a1) 
    tmax1 = _sage_const_2  * ordital_period(a1, r01)
    theta1 = pi/_sage_const_2   # Initialize theta1 as a numeric value
    signal1=h_particle_signal(a1, r01, theta1, phi1, _sage_const_0 , _sage_const_200 ,  mode='+',
                        nb_points=_sage_const_400 , phi0=_sage_const_0 , l_max=_sage_const_10 , m_min=_sage_const_1 ,
                        approximation=None, store=None)
    signal2=h_particle_signal(a1, r01, theta1, phi1, _sage_const_0 , _sage_const_200 ,  mode='x',
                        nb_points=_sage_const_400 , phi0=_sage_const_0 , l_max=_sage_const_10 , m_min=_sage_const_1 ,
                        approximation=None, store=None)

    return signal1
phi1 = _sage_const_0 
a1 = _sage_const_0 
r01 = _sage_const_0p15000  + r_isco(a1) 

print(hpm(phi1,a1,r01))
# print(type(hpm))

